{
  "results": [
    {
      "feature": "cypress\\e2e\\1-getting-started\\todo.cy.js",
      "scenario": "example to-do app displays two todo items by default",
      "state": "passed",
      "duration": 0
    },
    {
      "feature": "cypress\\e2e\\1-getting-started\\todo.cy.js",
      "scenario": "example to-do app can add new todo items",
      "state": "passed",
      "duration": 0
    },
    {
      "feature": "cypress\\e2e\\1-getting-started\\todo.cy.js",
      "scenario": "example to-do app can check off an item as completed",
      "state": "passed",
      "duration": 0
    },
    {
      "feature": "cypress\\e2e\\1-getting-started\\todo.cy.js",
      "scenario": "example to-do app with a checked task can filter for uncompleted tasks",
      "state": "passed",
      "duration": 0
    },
    {
      "feature": "cypress\\e2e\\1-getting-started\\todo.cy.js",
      "scenario": "example to-do app with a checked task can filter for completed tasks",
      "state": "passed",
      "duration": 0
    },
    {
      "feature": "cypress\\e2e\\1-getting-started\\todo.cy.js",
      "scenario": "example to-do app with a checked task can delete all completed tasks",
      "state": "passed",
      "duration": 0
    },
    {
      "feature": "cypress\\e2e\\2-advanced-examples\\actions.cy.js",
      "scenario": "Actions .type() - type into a DOM element",
      "state": "passed",
      "duration": 0
    },
    {
      "feature": "cypress\\e2e\\2-advanced-examples\\actions.cy.js",
      "scenario": "Actions .focus() - focus on a DOM element",
      "state": "passed",
      "duration": 0
    },
    {
      "feature": "cypress\\e2e\\2-advanced-examples\\actions.cy.js",
      "scenario": "Actions .blur() - blur off a DOM element",
      "state": "passed",
      "duration": 0
    },
    {
      "feature": "cypress\\e2e\\2-advanced-examples\\actions.cy.js",
      "scenario": "Actions .clear() - clears an input or textarea element",
      "state": "passed",
      "duration": 0
    },
    {
      "feature": "cypress\\e2e\\2-advanced-examples\\actions.cy.js",
      "scenario": "Actions .submit() - submit a form",
      "state": "passed",
      "duration": 0
    },
    {
      "feature": "cypress\\e2e\\2-advanced-examples\\actions.cy.js",
      "scenario": "Actions .click() - click on a DOM element",
      "state": "passed",
      "duration": 0
    },
    {
      "feature": "cypress\\e2e\\2-advanced-examples\\actions.cy.js",
      "scenario": "Actions .dblclick() - double click on a DOM element",
      "state": "passed",
      "duration": 0
    },
    {
      "feature": "cypress\\e2e\\2-advanced-examples\\actions.cy.js",
      "scenario": "Actions .rightclick() - right click on a DOM element",
      "state": "passed",
      "duration": 0
    },
    {
      "feature": "cypress\\e2e\\2-advanced-examples\\actions.cy.js",
      "scenario": "Actions .check() - check a checkbox or radio element",
      "state": "passed",
      "duration": 0
    },
    {
      "feature": "cypress\\e2e\\2-advanced-examples\\actions.cy.js",
      "scenario": "Actions .uncheck() - uncheck a checkbox element",
      "state": "passed",
      "duration": 0
    },
    {
      "feature": "cypress\\e2e\\2-advanced-examples\\actions.cy.js",
      "scenario": "Actions .select() - select an option in a <select> element",
      "state": "passed",
      "duration": 0
    },
    {
      "feature": "cypress\\e2e\\2-advanced-examples\\actions.cy.js",
      "scenario": "Actions .scrollIntoView() - scroll an element into view",
      "state": "passed",
      "duration": 0
    },
    {
      "feature": "cypress\\e2e\\2-advanced-examples\\actions.cy.js",
      "scenario": "Actions .trigger() - trigger an event on a DOM element",
      "state": "passed",
      "duration": 0
    },
    {
      "feature": "cypress\\e2e\\2-advanced-examples\\actions.cy.js",
      "scenario": "Actions cy.scrollTo() - scroll the window or element to a position",
      "state": "passed",
      "duration": 0
    },
    {
      "feature": "cypress\\e2e\\2-advanced-examples\\aliasing.cy.js",
      "scenario": "Aliasing .as() - alias a DOM element for later use",
      "state": "passed",
      "duration": 0
    },
    {
      "feature": "cypress\\e2e\\2-advanced-examples\\aliasing.cy.js",
      "scenario": "Aliasing .as() - alias a route for later use",
      "state": "passed",
      "duration": 0
    },
    {
      "feature": "cypress\\e2e\\2-advanced-examples\\assertions.cy.js",
      "scenario": "Assertions Implicit Assertions .should() - make an assertion about the current subject",
      "state": "passed",
      "duration": 0
    },
    {
      "feature": "cypress\\e2e\\2-advanced-examples\\assertions.cy.js",
      "scenario": "Assertions Implicit Assertions .and() - chain multiple assertions together",
      "state": "passed",
      "duration": 0
    },
    {
      "feature": "cypress\\e2e\\2-advanced-examples\\assertions.cy.js",
      "scenario": "Assertions Explicit Assertions expect - make an assertion about a specified subject",
      "state": "passed",
      "duration": 0
    },
    {
      "feature": "cypress\\e2e\\2-advanced-examples\\assertions.cy.js",
      "scenario": "Assertions Explicit Assertions pass your own callback function to should()",
      "state": "passed",
      "duration": 0
    },
    {
      "feature": "cypress\\e2e\\2-advanced-examples\\assertions.cy.js",
      "scenario": "Assertions Explicit Assertions finds element by class name regex",
      "state": "passed",
      "duration": 0
    },
    {
      "feature": "cypress\\e2e\\2-advanced-examples\\assertions.cy.js",
      "scenario": "Assertions Explicit Assertions can throw any error",
      "state": "passed",
      "duration": 0
    },
    {
      "feature": "cypress\\e2e\\2-advanced-examples\\assertions.cy.js",
      "scenario": "Assertions Explicit Assertions matches unknown text between two elements",
      "state": "passed",
      "duration": 0
    },
    {
      "feature": "cypress\\e2e\\2-advanced-examples\\assertions.cy.js",
      "scenario": "Assertions Explicit Assertions assert - assert shape of an object",
      "state": "passed",
      "duration": 0
    },
    {
      "feature": "cypress\\e2e\\2-advanced-examples\\assertions.cy.js",
      "scenario": "Assertions Explicit Assertions retries the should callback until assertions pass",
      "state": "passed",
      "duration": 0
    },
    {
      "feature": "cypress\\e2e\\2-advanced-examples\\connectors.cy.js",
      "scenario": "Connectors .each() - iterate over an array of elements",
      "state": "passed",
      "duration": 0
    },
    {
      "feature": "cypress\\e2e\\2-advanced-examples\\connectors.cy.js",
      "scenario": "Connectors .its() - get properties on the current subject",
      "state": "passed",
      "duration": 0
    },
    {
      "feature": "cypress\\e2e\\2-advanced-examples\\connectors.cy.js",
      "scenario": "Connectors .invoke() - invoke a function on the current subject",
      "state": "passed",
      "duration": 0
    },
    {
      "feature": "cypress\\e2e\\2-advanced-examples\\connectors.cy.js",
      "scenario": "Connectors .spread() - spread an array as individual args to callback function",
      "state": "passed",
      "duration": 0
    },
    {
      "feature": "cypress\\e2e\\2-advanced-examples\\connectors.cy.js",
      "scenario": "Connectors .then() invokes a callback function with the current subject",
      "state": "passed",
      "duration": 0
    },
    {
      "feature": "cypress\\e2e\\2-advanced-examples\\connectors.cy.js",
      "scenario": "Connectors .then() yields the returned value to the next command",
      "state": "passed",
      "duration": 0
    },
    {
      "feature": "cypress\\e2e\\2-advanced-examples\\connectors.cy.js",
      "scenario": "Connectors .then() yields the original subject without return",
      "state": "passed",
      "duration": 0
    },
    {
      "feature": "cypress\\e2e\\2-advanced-examples\\connectors.cy.js",
      "scenario": "Connectors .then() yields the value yielded by the last Cypress command inside",
      "state": "passed",
      "duration": 0
    },
    {
      "feature": "cypress\\e2e\\2-advanced-examples\\cookies.cy.js",
      "scenario": "Cookies cy.getCookie() - get a browser cookie",
      "state": "passed",
      "duration": 0
    },
    {
      "feature": "cypress\\e2e\\2-advanced-examples\\cookies.cy.js",
      "scenario": "Cookies cy.getCookies() - get browser cookies for the current domain",
      "state": "passed",
      "duration": 0
    },
    {
      "feature": "cypress\\e2e\\2-advanced-examples\\cookies.cy.js",
      "scenario": "Cookies cy.getAllCookies() - get all browser cookies",
      "state": "passed",
      "duration": 0
    },
    {
      "feature": "cypress\\e2e\\2-advanced-examples\\cookies.cy.js",
      "scenario": "Cookies cy.setCookie() - set a browser cookie",
      "state": "passed",
      "duration": 0
    },
    {
      "feature": "cypress\\e2e\\2-advanced-examples\\cookies.cy.js",
      "scenario": "Cookies cy.clearCookie() - clear a browser cookie",
      "state": "passed",
      "duration": 0
    },
    {
      "feature": "cypress\\e2e\\2-advanced-examples\\cookies.cy.js",
      "scenario": "Cookies cy.clearCookies() - clear browser cookies for the current domain",
      "state": "passed",
      "duration": 0
    },
    {
      "feature": "cypress\\e2e\\2-advanced-examples\\cookies.cy.js",
      "scenario": "Cookies cy.clearAllCookies() - clear all browser cookies",
      "state": "passed",
      "duration": 0
    },
    {
      "feature": "cypress\\e2e\\2-advanced-examples\\cypress_api.cy.js",
      "scenario": "Cypress APIs Cypress.Commands .add() - create a custom command",
      "state": "passed",
      "duration": 0
    },
    {
      "feature": "cypress\\e2e\\2-advanced-examples\\cypress_api.cy.js",
      "scenario": "Cypress APIs Cypress.Cookies .debug() - enable or disable debugging",
      "state": "passed",
      "duration": 0
    },
    {
      "feature": "cypress\\e2e\\2-advanced-examples\\cypress_api.cy.js",
      "scenario": "Cypress APIs Cypress.arch Get CPU architecture name of underlying OS",
      "state": "passed",
      "duration": 0
    },
    {
      "feature": "cypress\\e2e\\2-advanced-examples\\cypress_api.cy.js",
      "scenario": "Cypress APIs Cypress.config() Get and set configuration options",
      "state": "passed",
      "duration": 0
    },
    {
      "feature": "cypress\\e2e\\2-advanced-examples\\cypress_api.cy.js",
      "scenario": "Cypress APIs Cypress.dom .isHidden() - determine if a DOM element is hidden",
      "state": "passed",
      "duration": 0
    },
    {
      "feature": "cypress\\e2e\\2-advanced-examples\\cypress_api.cy.js",
      "scenario": "Cypress APIs Cypress.env() Get environment variables",
      "state": "passed",
      "duration": 0
    },
    {
      "feature": "cypress\\e2e\\2-advanced-examples\\cypress_api.cy.js",
      "scenario": "Cypress APIs Cypress.log Control what is printed to the Command Log",
      "state": "passed",
      "duration": 0
    },
    {
      "feature": "cypress\\e2e\\2-advanced-examples\\cypress_api.cy.js",
      "scenario": "Cypress APIs Cypress.platform Get underlying OS name",
      "state": "passed",
      "duration": 0
    },
    {
      "feature": "cypress\\e2e\\2-advanced-examples\\cypress_api.cy.js",
      "scenario": "Cypress APIs Cypress.version Get current version of Cypress being run",
      "state": "passed",
      "duration": 0
    },
    {
      "feature": "cypress\\e2e\\2-advanced-examples\\cypress_api.cy.js",
      "scenario": "Cypress APIs Cypress.spec Get current spec information",
      "state": "passed",
      "duration": 0
    },
    {
      "feature": "cypress\\e2e\\2-advanced-examples\\location.cy.js",
      "scenario": "Location cy.hash() - get the current URL hash",
      "state": "passed",
      "duration": 0
    },
    {
      "feature": "cypress\\e2e\\2-advanced-examples\\location.cy.js",
      "scenario": "Location cy.location() - get window.location",
      "state": "passed",
      "duration": 0
    },
    {
      "feature": "cypress\\e2e\\2-advanced-examples\\location.cy.js",
      "scenario": "Location cy.url() - get the current URL",
      "state": "passed",
      "duration": 0
    },
    {
      "feature": "cypress\\e2e\\2-advanced-examples\\misc.cy.js",
      "scenario": "Misc .end() - end the command chain",
      "state": "passed",
      "duration": 0
    },
    {
      "feature": "cypress\\e2e\\2-advanced-examples\\misc.cy.js",
      "scenario": "Misc cy.exec() - execute a system command",
      "state": "failed",
      "duration": 0
    },
    {
      "feature": "cypress\\e2e\\2-advanced-examples\\misc.cy.js",
      "scenario": "Misc cy.focused() - get the DOM element that has focus",
      "state": "passed",
      "duration": 0
    },
    {
      "feature": "cypress\\e2e\\2-advanced-examples\\misc.cy.js",
      "scenario": "Misc cy.wrap() - wrap an object",
      "state": "passed",
      "duration": 0
    },
    {
      "feature": "cypress\\e2e\\2-advanced-examples\\misc.cy.js",
      "scenario": "Misc Cypress.Screenshot cy.screenshot() - take a screenshot",
      "state": "passed",
      "duration": 0
    },
    {
      "feature": "cypress\\e2e\\2-advanced-examples\\misc.cy.js",
      "scenario": "Misc Cypress.Screenshot Cypress.Screenshot.defaults() - change default config of screenshots",
      "state": "passed",
      "duration": 0
    },
    {
      "feature": "cypress\\e2e\\2-advanced-examples\\navigation.cy.js",
      "scenario": "Navigation cy.go() - go back or forward in the browser's history",
      "state": "passed",
      "duration": 0
    },
    {
      "feature": "cypress\\e2e\\2-advanced-examples\\navigation.cy.js",
      "scenario": "Navigation cy.reload() - reload the page",
      "state": "passed",
      "duration": 0
    },
    {
      "feature": "cypress\\e2e\\2-advanced-examples\\navigation.cy.js",
      "scenario": "Navigation cy.visit() - visit a remote url",
      "state": "passed",
      "duration": 0
    },
    {
      "feature": "cypress\\e2e\\2-advanced-examples\\network_requests.cy.js",
      "scenario": "Network Requests cy.request() - make an XHR request",
      "state": "passed",
      "duration": 0
    },
    {
      "feature": "cypress\\e2e\\2-advanced-examples\\network_requests.cy.js",
      "scenario": "Network Requests cy.request() - verify response using BDD syntax",
      "state": "passed",
      "duration": 0
    },
    {
      "feature": "cypress\\e2e\\2-advanced-examples\\network_requests.cy.js",
      "scenario": "Network Requests cy.request() with query parameters",
      "state": "passed",
      "duration": 0
    },
    {
      "feature": "cypress\\e2e\\2-advanced-examples\\network_requests.cy.js",
      "scenario": "Network Requests cy.request() - pass result to the second request",
      "state": "passed",
      "duration": 0
    },
    {
      "feature": "cypress\\e2e\\2-advanced-examples\\network_requests.cy.js",
      "scenario": "Network Requests cy.request() - save response in the shared test context",
      "state": "passed",
      "duration": 0
    },
    {
      "feature": "cypress\\e2e\\2-advanced-examples\\network_requests.cy.js",
      "scenario": "Network Requests cy.intercept() - route responses to matching requests",
      "state": "passed",
      "duration": 0
    },
    {
      "feature": "cypress\\e2e\\2-advanced-examples\\querying.cy.js",
      "scenario": "Querying cy.get() - query DOM elements",
      "state": "passed",
      "duration": 0
    },
    {
      "feature": "cypress\\e2e\\2-advanced-examples\\querying.cy.js",
      "scenario": "Querying cy.contains() - query DOM elements with matching content",
      "state": "passed",
      "duration": 0
    },
    {
      "feature": "cypress\\e2e\\2-advanced-examples\\querying.cy.js",
      "scenario": "Querying .within() - query DOM elements within a specific element",
      "state": "passed",
      "duration": 0
    },
    {
      "feature": "cypress\\e2e\\2-advanced-examples\\querying.cy.js",
      "scenario": "Querying cy.root() - query the root DOM element",
      "state": "passed",
      "duration": 0
    },
    {
      "feature": "cypress\\e2e\\2-advanced-examples\\querying.cy.js",
      "scenario": "Querying best practices - selecting elements",
      "state": "passed",
      "duration": 0
    },
    {
      "feature": "cypress\\e2e\\2-advanced-examples\\spies_stubs_clocks.cy.js",
      "scenario": "Spies, Stubs, and Clock cy.spy() - wrap a method in a spy",
      "state": "passed",
      "duration": 0
    },
    {
      "feature": "cypress\\e2e\\2-advanced-examples\\spies_stubs_clocks.cy.js",
      "scenario": "Spies, Stubs, and Clock cy.spy() retries until assertions pass",
      "state": "passed",
      "duration": 0
    },
    {
      "feature": "cypress\\e2e\\2-advanced-examples\\spies_stubs_clocks.cy.js",
      "scenario": "Spies, Stubs, and Clock cy.stub() - create a stub and/or replace a function with stub",
      "state": "passed",
      "duration": 0
    },
    {
      "feature": "cypress\\e2e\\2-advanced-examples\\spies_stubs_clocks.cy.js",
      "scenario": "Spies, Stubs, and Clock cy.clock() - control time in the browser",
      "state": "passed",
      "duration": 0
    },
    {
      "feature": "cypress\\e2e\\2-advanced-examples\\spies_stubs_clocks.cy.js",
      "scenario": "Spies, Stubs, and Clock cy.tick() - move time in the browser",
      "state": "passed",
      "duration": 0
    },
    {
      "feature": "cypress\\e2e\\2-advanced-examples\\spies_stubs_clocks.cy.js",
      "scenario": "Spies, Stubs, and Clock cy.stub() matches depending on arguments",
      "state": "passed",
      "duration": 0
    },
    {
      "feature": "cypress\\e2e\\2-advanced-examples\\spies_stubs_clocks.cy.js",
      "scenario": "Spies, Stubs, and Clock matches call arguments using Sinon matchers",
      "state": "passed",
      "duration": 0
    },
    {
      "feature": "cypress\\e2e\\2-advanced-examples\\storage.cy.js",
      "scenario": "Local Storage / Session Storage cy.clearLocalStorage() - clear all data in localStorage for the current origin",
      "state": "passed",
      "duration": 0
    },
    {
      "feature": "cypress\\e2e\\2-advanced-examples\\storage.cy.js",
      "scenario": "Local Storage / Session Storage cy.getAllLocalStorage() - get all data in localStorage for all origins",
      "state": "passed",
      "duration": 0
    },
    {
      "feature": "cypress\\e2e\\2-advanced-examples\\storage.cy.js",
      "scenario": "Local Storage / Session Storage cy.clearAllLocalStorage() - clear all data in localStorage for all origins",
      "state": "passed",
      "duration": 0
    },
    {
      "feature": "cypress\\e2e\\2-advanced-examples\\storage.cy.js",
      "scenario": "Local Storage / Session Storage cy.getAllSessionStorage() - get all data in sessionStorage for all origins",
      "state": "passed",
      "duration": 0
    },
    {
      "feature": "cypress\\e2e\\2-advanced-examples\\storage.cy.js",
      "scenario": "Local Storage / Session Storage cy.clearAllSessionStorage() - clear all data in sessionStorage for all origins",
      "state": "passed",
      "duration": 0
    },
    {
      "feature": "cypress\\e2e\\2-advanced-examples\\traversal.cy.js",
      "scenario": "Traversal .children() - get child DOM elements",
      "state": "passed",
      "duration": 0
    },
    {
      "feature": "cypress\\e2e\\2-advanced-examples\\traversal.cy.js",
      "scenario": "Traversal .closest() - get closest ancestor DOM element",
      "state": "passed",
      "duration": 0
    },
    {
      "feature": "cypress\\e2e\\2-advanced-examples\\traversal.cy.js",
      "scenario": "Traversal .eq() - get a DOM element at a specific index",
      "state": "passed",
      "duration": 0
    },
    {
      "feature": "cypress\\e2e\\2-advanced-examples\\traversal.cy.js",
      "scenario": "Traversal .filter() - get DOM elements that match the selector",
      "state": "passed",
      "duration": 0
    },
    {
      "feature": "cypress\\e2e\\2-advanced-examples\\traversal.cy.js",
      "scenario": "Traversal .find() - get descendant DOM elements of the selector",
      "state": "passed",
      "duration": 0
    },
    {
      "feature": "cypress\\e2e\\2-advanced-examples\\traversal.cy.js",
      "scenario": "Traversal .first() - get first DOM element",
      "state": "passed",
      "duration": 0
    },
    {
      "feature": "cypress\\e2e\\2-advanced-examples\\traversal.cy.js",
      "scenario": "Traversal .last() - get last DOM element",
      "state": "passed",
      "duration": 0
    },
    {
      "feature": "cypress\\e2e\\2-advanced-examples\\traversal.cy.js",
      "scenario": "Traversal .next() - get next sibling DOM element",
      "state": "passed",
      "duration": 0
    },
    {
      "feature": "cypress\\e2e\\2-advanced-examples\\traversal.cy.js",
      "scenario": "Traversal .nextAll() - get all next sibling DOM elements",
      "state": "passed",
      "duration": 0
    },
    {
      "feature": "cypress\\e2e\\2-advanced-examples\\traversal.cy.js",
      "scenario": "Traversal .nextUntil() - get next sibling DOM elements until next el",
      "state": "passed",
      "duration": 0
    },
    {
      "feature": "cypress\\e2e\\2-advanced-examples\\traversal.cy.js",
      "scenario": "Traversal .not() - remove DOM elements from set of DOM elements",
      "state": "passed",
      "duration": 0
    },
    {
      "feature": "cypress\\e2e\\2-advanced-examples\\traversal.cy.js",
      "scenario": "Traversal .parent() - get parent DOM element from DOM elements",
      "state": "passed",
      "duration": 0
    },
    {
      "feature": "cypress\\e2e\\2-advanced-examples\\traversal.cy.js",
      "scenario": "Traversal .parents() - get parent DOM elements from DOM elements",
      "state": "passed",
      "duration": 0
    },
    {
      "feature": "cypress\\e2e\\2-advanced-examples\\traversal.cy.js",
      "scenario": "Traversal .parentsUntil() - get parent DOM elements from DOM elements until el",
      "state": "passed",
      "duration": 0
    },
    {
      "feature": "cypress\\e2e\\2-advanced-examples\\traversal.cy.js",
      "scenario": "Traversal .prev() - get previous sibling DOM element",
      "state": "passed",
      "duration": 0
    },
    {
      "feature": "cypress\\e2e\\2-advanced-examples\\traversal.cy.js",
      "scenario": "Traversal .prevAll() - get all previous sibling DOM elements",
      "state": "passed",
      "duration": 0
    },
    {
      "feature": "cypress\\e2e\\2-advanced-examples\\traversal.cy.js",
      "scenario": "Traversal .prevUntil() - get all previous sibling DOM elements until el",
      "state": "passed",
      "duration": 0
    },
    {
      "feature": "cypress\\e2e\\2-advanced-examples\\traversal.cy.js",
      "scenario": "Traversal .siblings() - get all sibling DOM elements",
      "state": "passed",
      "duration": 0
    },
    {
      "feature": "cypress\\e2e\\2-advanced-examples\\utilities.cy.js",
      "scenario": "Utilities Cypress._ - call a lodash method",
      "state": "passed",
      "duration": 0
    },
    {
      "feature": "cypress\\e2e\\2-advanced-examples\\utilities.cy.js",
      "scenario": "Utilities Cypress.$ - call a jQuery method",
      "state": "passed",
      "duration": 0
    },
    {
      "feature": "cypress\\e2e\\2-advanced-examples\\utilities.cy.js",
      "scenario": "Utilities Cypress.Blob - blob utilities and base64 string conversion",
      "state": "passed",
      "duration": 0
    },
    {
      "feature": "cypress\\e2e\\2-advanced-examples\\utilities.cy.js",
      "scenario": "Utilities Cypress.minimatch - test out glob patterns against strings",
      "state": "passed",
      "duration": 0
    },
    {
      "feature": "cypress\\e2e\\2-advanced-examples\\utilities.cy.js",
      "scenario": "Utilities Cypress.Promise - instantiate a bluebird promise",
      "state": "passed",
      "duration": 0
    },
    {
      "feature": "cypress\\e2e\\2-advanced-examples\\viewport.cy.js",
      "scenario": "Viewport cy.viewport() - set the viewport size and dimension",
      "state": "passed",
      "duration": 0
    },
    {
      "feature": "cypress\\e2e\\2-advanced-examples\\waiting.cy.js",
      "scenario": "Waiting cy.wait() - wait for a specific amount of time",
      "state": "passed",
      "duration": 0
    },
    {
      "feature": "cypress\\e2e\\2-advanced-examples\\waiting.cy.js",
      "scenario": "Waiting cy.wait() - wait for a specific route",
      "state": "passed",
      "duration": 0
    },
    {
      "feature": "cypress\\e2e\\2-advanced-examples\\window.cy.js",
      "scenario": "Window cy.window() - get the global window object",
      "state": "passed",
      "duration": 0
    },
    {
      "feature": "cypress\\e2e\\2-advanced-examples\\window.cy.js",
      "scenario": "Window cy.document() - get the document object",
      "state": "passed",
      "duration": 0
    },
    {
      "feature": "cypress\\e2e\\2-advanced-examples\\window.cy.js",
      "scenario": "Window cy.title() - get the title",
      "state": "passed",
      "duration": 0
    }
  ],
  "totals": {
    "suites": 34,
    "tests": 120,
    "failed": 2,
    "passed": 119,
    "pending": 0,
    "skipped": 0
  }
}
